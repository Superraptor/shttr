/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { animation, style, animate, keyframes } from '@angular/animations';
import { DEFAULT_TIMING } from './utils';
export var /** @type {?} */ flip = animation([
    style({ 'backface-visibility': 'visible' }),
    animate('{{ timing }}s {{ delay }}s ease-out', keyframes([
        style({
            transform: 'perspective(400px) rotate3d(0, 1, 0, -360deg)',
            offset: 0
        }),
        style({
            transform: 'perspective(400px) scale3d(1.5, 1.5, 1.5) rotate3d(0, 1, 0, -190deg)',
            offset: 0.4
        }),
        style({
            transform: 'perspective(400px) scale3d(1.5, 1.5, 1.5) rotate3d(0, 1, 0, -170deg)',
            offset: 0.5
        }),
        style({
            transform: 'perspective(400px) scale3d(.95, .95, .95)',
            offset: 0.8
        }),
        style({
            transform: 'perspective(400px)',
            offset: 1
        })
    ]))
], {
    params: { timing: DEFAULT_TIMING, delay: 0 }
});
/**
 * @param {?} rotateX
 * @param {?} rotateY
 * @return {?}
 */
export function flipIn(rotateX, rotateY) {
    return animation([
        style({ 'backface-visibility': 'visible' }),
        animate('{{ timing }}s {{ delay }}s ease-in', keyframes([
            style({
                opacity: 0,
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
                offset: 0
            }),
            style({
                opacity: 1,
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
                offset: 0.4
            }),
            style({
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',
                offset: 0.6
            }),
            style({
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',
                offset: 0.8
            }),
            style({
                transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',
                offset: 1
            })
        ]))
    ], { params: { timing: DEFAULT_TIMING, delay: 0, rotateX: rotateX, rotateY: rotateY } });
}
export var /** @type {?} */ flipInX = flipIn(1, 0);
export var /** @type {?} */ flipInY = flipIn(0, 1);
/**
 * @param {?} rotateX
 * @param {?} rotateY
 * @return {?}
 */
export function flipOut(rotateX, rotateY) {
    return animation([
        style({ 'backface-visibility': 'visible' }),
        animate('{{ timing }}s {{ delay }}s', keyframes([
            style({
                transform: 'perspective(400px)',
                offset: 0
            }),
            style({
                opacity: 1,
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
                offset: 0.3
            }),
            style({
                opacity: 0,
                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
                offset: 1
            })
        ]))
    ], { params: { timing: DEFAULT_TIMING, delay: 0, rotateX: rotateX, rotateY: rotateY } });
}
export var /** @type {?} */ flipOutX = flipOut(1, 0);
export var /** @type {?} */ flipOutY = flipOut(0, 1);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxpcHBlcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1hbmltYXRlLyIsInNvdXJjZXMiOlsibGliL2ZsaXBwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULEtBQUssRUFDTCxPQUFPLEVBQ1AsU0FBUyxFQUNWLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV6QyxNQUFNLENBQUMscUJBQU0sSUFBSSxHQUFHLFNBQVMsQ0FDM0I7SUFDRSxLQUFLLENBQUMsRUFBRSxxQkFBcUIsRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUMzQyxPQUFPLENBQ0wscUNBQXFDLEVBQ3JDLFNBQVMsQ0FBQztRQUNSLEtBQUssQ0FBQztZQUNKLFNBQVMsRUFBRSwrQ0FBK0M7WUFDMUQsTUFBTSxFQUFFLENBQUM7U0FDVixDQUFDO1FBQ0YsS0FBSyxDQUFDO1lBQ0osU0FBUyxFQUNQLHNFQUFzRTtZQUN4RSxNQUFNLEVBQUUsR0FBRztTQUNaLENBQUM7UUFDRixLQUFLLENBQUM7WUFDSixTQUFTLEVBQ1Asc0VBQXNFO1lBQ3hFLE1BQU0sRUFBRSxHQUFHO1NBQ1osQ0FBQztRQUNGLEtBQUssQ0FBQztZQUNKLFNBQVMsRUFBRSwyQ0FBMkM7WUFDdEQsTUFBTSxFQUFFLEdBQUc7U0FDWixDQUFDO1FBQ0YsS0FBSyxDQUFDO1lBQ0osU0FBUyxFQUFFLG9CQUFvQjtZQUMvQixNQUFNLEVBQUUsQ0FBQztTQUNWLENBQUM7S0FDSCxDQUFDLENBQ0g7Q0FDRixFQUNEO0lBQ0UsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFO0NBQzdDLENBQ0YsQ0FBQzs7Ozs7O0FBRUYsTUFBTSxpQkFBaUIsT0FBTyxFQUFFLE9BQU87SUFDckMsTUFBTSxDQUFDLFNBQVMsQ0FDZDtRQUNFLEtBQUssQ0FBQyxFQUFFLHFCQUFxQixFQUFFLFNBQVMsRUFBRSxDQUFDO1FBQzNDLE9BQU8sQ0FDTCxvQ0FBb0MsRUFDcEMsU0FBUyxDQUFDO1lBQ1IsS0FBSyxDQUFDO2dCQUNKLE9BQU8sRUFBRSxDQUFDO2dCQUNWLFNBQVMsRUFDUCxxRUFBcUU7Z0JBQ3ZFLE1BQU0sRUFBRSxDQUFDO2FBQ1YsQ0FBQztZQUNGLEtBQUssQ0FBQztnQkFDSixPQUFPLEVBQUUsQ0FBQztnQkFDVixTQUFTLEVBQ1Asc0VBQXNFO2dCQUN4RSxNQUFNLEVBQUUsR0FBRzthQUNaLENBQUM7WUFDRixLQUFLLENBQUM7Z0JBQ0osU0FBUyxFQUNQLHFFQUFxRTtnQkFDdkUsTUFBTSxFQUFFLEdBQUc7YUFDWixDQUFDO1lBQ0YsS0FBSyxDQUFDO2dCQUNKLFNBQVMsRUFDUCxxRUFBcUU7Z0JBQ3ZFLE1BQU0sRUFBRSxHQUFHO2FBQ1osQ0FBQztZQUNGLEtBQUssQ0FBQztnQkFDSixTQUFTLEVBQUUseUNBQXlDO2dCQUNwRCxNQUFNLEVBQUUsQ0FBQzthQUNWLENBQUM7U0FDSCxDQUFDLENBQ0g7S0FDRixFQUNELEVBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE9BQU8sU0FBQSxFQUFFLE9BQU8sU0FBQSxFQUFFLEVBQUUsQ0FDbkUsQ0FBQztDQUNIO0FBRUQsTUFBTSxDQUFDLHFCQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxxQkFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzs7Ozs7O0FBRXBDLE1BQU0sa0JBQWtCLE9BQU8sRUFBRSxPQUFPO0lBQ3RDLE1BQU0sQ0FBQyxTQUFTLENBQ2Q7UUFDRSxLQUFLLENBQUMsRUFBRSxxQkFBcUIsRUFBRSxTQUFTLEVBQUUsQ0FBQztRQUMzQyxPQUFPLENBQ0wsNEJBQTRCLEVBQzVCLFNBQVMsQ0FBQztZQUNSLEtBQUssQ0FBQztnQkFDSixTQUFTLEVBQUUsb0JBQW9CO2dCQUMvQixNQUFNLEVBQUUsQ0FBQzthQUNWLENBQUM7WUFDRixLQUFLLENBQUM7Z0JBQ0osT0FBTyxFQUFFLENBQUM7Z0JBQ1YsU0FBUyxFQUNQLHNFQUFzRTtnQkFDeEUsTUFBTSxFQUFFLEdBQUc7YUFDWixDQUFDO1lBQ0YsS0FBSyxDQUFDO2dCQUNKLE9BQU8sRUFBRSxDQUFDO2dCQUNWLFNBQVMsRUFDUCxxRUFBcUU7Z0JBQ3ZFLE1BQU0sRUFBRSxDQUFDO2FBQ1YsQ0FBQztTQUNILENBQUMsQ0FDSDtLQUNGLEVBQ0QsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsT0FBTyxTQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsRUFBRSxDQUNuRSxDQUFDO0NBQ0g7QUFFRCxNQUFNLENBQUMscUJBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDdEMsTUFBTSxDQUFDLHFCQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5pbWF0aW9uUmVmZXJlbmNlTWV0YWRhdGEsXG4gIGFuaW1hdGlvbixcbiAgc3R5bGUsXG4gIGFuaW1hdGUsXG4gIGtleWZyYW1lc1xufSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IERFRkFVTFRfVElNSU5HIH0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBmbGlwID0gYW5pbWF0aW9uKFxuICBbXG4gICAgc3R5bGUoeyAnYmFja2ZhY2UtdmlzaWJpbGl0eSc6ICd2aXNpYmxlJyB9KSxcbiAgICBhbmltYXRlKFxuICAgICAgJ3t7IHRpbWluZyB9fXMge3sgZGVsYXkgfX1zIGVhc2Utb3V0JyxcbiAgICAgIGtleWZyYW1lcyhbXG4gICAgICAgIHN0eWxlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdwZXJzcGVjdGl2ZSg0MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgLTM2MGRlZyknLFxuICAgICAgICAgIG9mZnNldDogMFxuICAgICAgICB9KSxcbiAgICAgICAgc3R5bGUoe1xuICAgICAgICAgIHRyYW5zZm9ybTpcbiAgICAgICAgICAgICdwZXJzcGVjdGl2ZSg0MDBweCkgc2NhbGUzZCgxLjUsIDEuNSwgMS41KSByb3RhdGUzZCgwLCAxLCAwLCAtMTkwZGVnKScsXG4gICAgICAgICAgb2Zmc2V0OiAwLjRcbiAgICAgICAgfSksXG4gICAgICAgIHN0eWxlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06XG4gICAgICAgICAgICAncGVyc3BlY3RpdmUoNDAwcHgpIHNjYWxlM2QoMS41LCAxLjUsIDEuNSkgcm90YXRlM2QoMCwgMSwgMCwgLTE3MGRlZyknLFxuICAgICAgICAgIG9mZnNldDogMC41XG4gICAgICAgIH0pLFxuICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAncGVyc3BlY3RpdmUoNDAwcHgpIHNjYWxlM2QoLjk1LCAuOTUsIC45NSknLFxuICAgICAgICAgIG9mZnNldDogMC44XG4gICAgICAgIH0pLFxuICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAncGVyc3BlY3RpdmUoNDAwcHgpJyxcbiAgICAgICAgICBvZmZzZXQ6IDFcbiAgICAgICAgfSlcbiAgICAgIF0pXG4gICAgKVxuICBdLFxuICB7XG4gICAgcGFyYW1zOiB7IHRpbWluZzogREVGQVVMVF9USU1JTkcsIGRlbGF5OiAwIH1cbiAgfVxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGZsaXBJbihyb3RhdGVYLCByb3RhdGVZKSB7XG4gIHJldHVybiBhbmltYXRpb24oXG4gICAgW1xuICAgICAgc3R5bGUoeyAnYmFja2ZhY2UtdmlzaWJpbGl0eSc6ICd2aXNpYmxlJyB9KSxcbiAgICAgIGFuaW1hdGUoXG4gICAgICAgICd7eyB0aW1pbmcgfX1zIHt7IGRlbGF5IH19cyBlYXNlLWluJyxcbiAgICAgICAga2V5ZnJhbWVzKFtcbiAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgdHJhbnNmb3JtOlxuICAgICAgICAgICAgICAncGVyc3BlY3RpdmUoNDAwcHgpIHJvdGF0ZTNkKHt7IHJvdGF0ZVggfX0sIHt7IHJvdGF0ZVkgfX0sIDAsIDkwZGVnKScsXG4gICAgICAgICAgICBvZmZzZXQ6IDBcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgdHJhbnNmb3JtOlxuICAgICAgICAgICAgICAncGVyc3BlY3RpdmUoNDAwcHgpIHJvdGF0ZTNkKHt7IHJvdGF0ZVggfX0sIHt7IHJvdGF0ZVkgfX0sIDAsIC0yMGRlZyknLFxuICAgICAgICAgICAgb2Zmc2V0OiAwLjRcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06XG4gICAgICAgICAgICAgICdwZXJzcGVjdGl2ZSg0MDBweCkgcm90YXRlM2Qoe3sgcm90YXRlWCB9fSwge3sgcm90YXRlWSB9fSwgMCwgMTBkZWcpJyxcbiAgICAgICAgICAgIG9mZnNldDogMC42XG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOlxuICAgICAgICAgICAgICAncGVyc3BlY3RpdmUoNDAwcHgpIHJvdGF0ZTNkKHt7IHJvdGF0ZVggfX0sIHt7IHJvdGF0ZVkgfX0sIDAsIC01ZGVnKScsXG4gICAgICAgICAgICBvZmZzZXQ6IDAuOFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJ3BlcnNwZWN0aXZlKDQwMHB4KSByb3RhdGUzZCgwLCAwLCAwLCAwKScsXG4gICAgICAgICAgICBvZmZzZXQ6IDFcbiAgICAgICAgICB9KVxuICAgICAgICBdKVxuICAgICAgKVxuICAgIF0sXG4gICAgeyBwYXJhbXM6IHsgdGltaW5nOiBERUZBVUxUX1RJTUlORywgZGVsYXk6IDAsIHJvdGF0ZVgsIHJvdGF0ZVkgfSB9XG4gICk7XG59XG5cbmV4cG9ydCBjb25zdCBmbGlwSW5YID0gZmxpcEluKDEsIDApO1xuZXhwb3J0IGNvbnN0IGZsaXBJblkgPSBmbGlwSW4oMCwgMSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBmbGlwT3V0KHJvdGF0ZVgsIHJvdGF0ZVkpIHtcbiAgcmV0dXJuIGFuaW1hdGlvbihcbiAgICBbXG4gICAgICBzdHlsZSh7ICdiYWNrZmFjZS12aXNpYmlsaXR5JzogJ3Zpc2libGUnIH0pLFxuICAgICAgYW5pbWF0ZShcbiAgICAgICAgJ3t7IHRpbWluZyB9fXMge3sgZGVsYXkgfX1zJyxcbiAgICAgICAga2V5ZnJhbWVzKFtcbiAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICdwZXJzcGVjdGl2ZSg0MDBweCknLFxuICAgICAgICAgICAgb2Zmc2V0OiAwXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgIHRyYW5zZm9ybTpcbiAgICAgICAgICAgICAgJ3BlcnNwZWN0aXZlKDQwMHB4KSByb3RhdGUzZCh7eyByb3RhdGVYIH19LCB7eyByb3RhdGVZIH19LCAwLCAtMjBkZWcpJyxcbiAgICAgICAgICAgIG9mZnNldDogMC4zXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTpcbiAgICAgICAgICAgICAgJ3BlcnNwZWN0aXZlKDQwMHB4KSByb3RhdGUzZCh7eyByb3RhdGVYIH19LCB7eyByb3RhdGVZIH19LCAwLCA5MGRlZyknLFxuICAgICAgICAgICAgb2Zmc2V0OiAxXG4gICAgICAgICAgfSlcbiAgICAgICAgXSlcbiAgICAgIClcbiAgICBdLFxuICAgIHsgcGFyYW1zOiB7IHRpbWluZzogREVGQVVMVF9USU1JTkcsIGRlbGF5OiAwLCByb3RhdGVYLCByb3RhdGVZIH0gfVxuICApO1xufVxuXG5leHBvcnQgY29uc3QgZmxpcE91dFggPSBmbGlwT3V0KDEsIDApO1xuZXhwb3J0IGNvbnN0IGZsaXBPdXRZID0gZmxpcE91dCgwLCAxKTtcbiJdfQ==